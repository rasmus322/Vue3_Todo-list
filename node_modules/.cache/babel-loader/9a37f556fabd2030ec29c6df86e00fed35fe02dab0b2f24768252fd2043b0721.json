{"ast":null,"code":"import { vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-33df0029\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"todo__item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"li\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    class: \"check\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.onCheck = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.onCheck]]), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"todo__name\", {\n      done: $setup.onCheck\n    }])\n  }, _toDisplayString($props.task.name), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    class: \"todo__btn-delete\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.onDelete && $setup.onDelete(...args))\n  }, \" Delete Task \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","$setup","onCheck","$event","_normalizeClass","done","$props","task","name","onClick","_cache","args","onDelete"],"sources":["/home/rasmus/code/vue/vue_todo/src/components/TodoItem.vue"],"sourcesContent":["<template>\n  <li class=\"todo__item\">\n    <input type=\"checkbox\" class=\"check\" v-model=\"onCheck\">\n    <p class=\"todo__name\" :class=\"{done: onCheck}\"> {{ task.name }} </p>\n    <button class=\"todo__btn-delete\" @click=\"onDelete\">\n      Delete Task\n    </button>\n  </li>\n</template>\n<script>\n  import { useStore } from 'vuex'\n  import { computed } from 'vue'\n\n  export default {\n    props: {\n      task: {\n        type: Object,\n        required: true\n      }\n    },\n    setup(props) {\n      const store = useStore()\n      const onCheck = computed({\n        get() {\n          return props.task.done\n        },\n        set() {\n          store.commit(\"toggleStatus\", props.task.id)\n        }\n      })\n      const onDelete = () => {\n        store.commit(\"deleteTodo\", props.task.id)\n      }\n\n      return { onCheck, onDelete }\n    }\n  }\n</script>\n<style scoped>\n  .todo__item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: #305252;\n    transition: 0.3s;\n    padding: 10px 20px;\n  }\n  .check {\n    margin-right: 0;\n    margin-left: 0;\n  }\n  .todo__name {\n    color: #B7D5D4;\n    margin-left: 20px;\n  }\n  .todo__btn-delete {\n    background: #E76A6A;\n    margin-right: 0;\n  }\n</style>"],"mappings":";;;EACMA,KAAK,EAAC;AAAY;;uBAAtBC,mBAAA,CAMK,MANLC,UAMK,G,gBALHC,mBAAA,CAAuD;IAAhDC,IAAI,EAAC,UAAU;IAACJ,KAAK,EAAC,OAAO;+DAAUK,MAAA,CAAAC,OAAO,GAAAC,MAAA;qDAAPF,MAAA,CAAAC,OAAO,E,GACrDH,mBAAA,CAAoE;IAAjEH,KAAK,EAAAQ,eAAA,EAAC,YAAY;MAAAC,IAAA,EAAgBJ,MAAA,CAAAC;IAAO;sBAAOI,MAAA,CAAAC,IAAI,CAACC,IAAI,yBAC5DT,mBAAA,CAES;IAFDH,KAAK,EAAC,kBAAkB;IAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEV,MAAA,CAAAW,QAAA,IAAAX,MAAA,CAAAW,QAAA,IAAAD,IAAA,CAAQ;KAAE,eAEnD,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}